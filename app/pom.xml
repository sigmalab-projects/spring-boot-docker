<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.sigmalab.siggi.examples</groupId>
		<artifactId>spring-boot-docker</artifactId>
		<version>0.5-57</version>
	</parent>
	<artifactId>app</artifactId>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>service</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- TESTING -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>maven-docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.18.1</version>
						<configuration>
							<argLine>-Ddebug</argLine>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.15.9</version>
						<configuration>
							<verbose>true</verbose>
							<dockerHost>http://localhost:2375</dockerHost>
							<authConfig>
								<username>${env.DOCKER_USER}</username>
								<password>${env.DOCKER_PASSWORD}</password>
							</authConfig>
							<images>
								<image>
									<name>sigmalab/spring-boot-docker-example</name>
									<build>
										<from>azul/zulu-openjdk:8u92-8.15.0.1</from>
										<maintainer>joerg.bellmann@sigma-lab.de</maintainer>
										<tags>
											<tag>${project.version}</tag>
										</tags>
										<ports>
											<port>8080</port>
										</ports>
										<entryPoint>
											<!-- exec form for ENTRYPOINT -->
											<exec>
												<arg>java</arg>

												<arg>-jar</arg>
												<arg>/${project.build.finalName}.${project.packaging}</arg>
											</exec>
										</entryPoint>
										<assembly>
											<mode>dir</mode>
											<basedir>/</basedir>
											<!-- searches in ${basedir}/src/main/docker -->
											<descriptor>hello-siggi-assembly.xml</descriptor>
										</assembly>
									</build>
									<run>
										<env>
											<SIG_EXAMPLE_1>one</SIG_EXAMPLE_1>
											<SIG_EXAMPLE_2>two</SIG_EXAMPLE_2>
										</env>
										<ports>
											<port>10080:8080</port>
										</ports>
										<wait>
											<time>15000</time>
										</wait>
										<log>
											<prefix>DOCKER_LOG</prefix>
											<date>ISO8601</date>
											<color>blue</color>
										</log>
									</run>
								</image>
							</images>
						</configuration>
						<!-- Connect start/stop to pre- and post-integration-test phase, respectively 
							if you want to start your docker containers during integration tests -->
						<executions>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<!-- "build" should be used to create the images with the artefacts -->
									<goal>build</goal>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
